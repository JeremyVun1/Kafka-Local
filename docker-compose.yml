---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "${ZK_PORT}:${ZK_PORT}"
    #restart:
    #    always
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZK_PORT}
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:${CONFLUENT_VERSION}
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "${BROKER_PORT_INTER_HOST}:${BROKER_PORT_INTER_HOST}"
      - "${BROKER_PORT_EXTERNAL}:${BROKER_PORT_EXTERNAL}"
    #restart:
    #    always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:${ZK_PORT}'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTER_BROKER:SSL,INTER_HOST:SSL,EXTERNAL:SSL
      KAFKA_ADVERTISED_LISTENERS: INTER_BROKER://broker:${BROKER_PORT_INTER_BROKER},INTER_HOST://broker:${BROKER_PORT_INTER_HOST},EXTERNAL://localhost:${BROKER_PORT_EXTERNAL}
      #KAFKA_LISTENERS: INTERNAL://broker:${BROKER_PORT_INTERNAL},EXTERNAL://0.0.0.0:${BROKER_PORT_EXTERNAL}
      KAFKA_INTER_BROKER_LISTENER_NAME: INTER_BROKER
    
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

      #KAFKA_JMX_PORT: 9101
      #KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:${SCHEMA_REGISTRY_PORT}

      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:${BROKER_PORT_INTER_HOST}
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SSL
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/truststore/${TRUSTSTORE}
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/${BROKER_KEYSTORE}
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      CONFLUENT_METRICS_REPORTER_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      CONFLUENT_METRICS_ENABLE: 'true'
      #CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_FILENAME: ${TRUSTSTORE}
      #CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_CREDENTIALS: password.txt
      #CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_FILENAME: ${BROKER_KEYSTORE}
      #CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_CREDENTIALS: password.txt
      #CONFLUENT_METRICS_REPORTER_SSL_KEY_CREDENTIALS: password.txt

      #KAFKA_SSL_KEYSTORE_FILENAME: ${BROKER_KEYSTORE}
      #KAFKA_SSL_KEYSTORE_CREDENTIALS: password.txt
      #KAFKA_SSL_KEY_CREDENTIALS: password.txt
      #KAFKA_SSL_TRUSTSTORE_FILENAME: ${TRUSTSTORE}
      #KAFKA_SSL_TRUSTSTORE_CREDENTIALS: password.txt
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/${BROKER_KEYSTORE}
      KAFKA_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/truststore/${TRUSTSTORE}
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}

      KAFKA_ZOOKEEPER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''
      KAFKA_SECRUTIY_PROTOCOL: SSL

      # ACL CONFIG
      #KAFKA_ZOOKEEPER_SET_ACL: 'true'
      #KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer # ??

    volumes:
      - ${KAFKA_SSL_SECRETS_DIR}/broker:/etc/kafka/secrets
      - ${KAFKA_SSL_SECRETS_DIR}/ca-public:/etc/kafka/truststore
  
  schema-registry:
    image: confluentinc/cp-schema-registry:${CONFLUENT_VERSION}
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "${SCHEMA_REGISTRY_PORT}:${SCHEMA_REGISTRY_PORT}"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:${BROKER_PORT_INTER_HOST}'

      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:${SCHEMA_REGISTRY_PORT}
      #SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "https"

      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SSL
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/truststore/${TRUSTSTORE}
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/${SCHEMA_REGISTRY_KEYSTORE}
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}

      #SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/${SCHEMA_REGISTRY_KEYSTORE}
      #SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      #SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/${TRUSTSTORE}
      #SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      #SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      #SCHEMA_REGISTRY_SSL_CLIENT_AUTHENTICATION: NONE

      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ${KAFKA_SSL_SECRETS_DIR}/schema-registry:/etc/kafka/secrets
      - ${KAFKA_SSL_SECRETS_DIR}/ca-public:/etc/kafka/truststore

  control-center:
    image: confluentinc/cp-enterprise-control-center:${CONFLUENT_VERSION}
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
      - schema-registry
    ports:
      - "${CC_PORT}:${CC_PORT}"
    #restart:
    #    always
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:${BROKER_PORT_INTER_HOST}'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "schema-registry:${SCHEMA_REGISTRY_PORT}"

      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_METRICS_TOPIC_PARTITIONS: 1

      CONTROL_CENTER_STREAMS_SESSION_TIMEOUT_MS: 10000

      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SSL
      CONTROL_CENTER_STREAMS_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/${CC_KEYSTORE}
      CONTROL_CENTER_STREAMS_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      CONTROL_CENTER_STREAMS_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_LOCATION: /etc/kafka/truststore/${TRUSTSTORE}
      CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}

      PORT: ${CC_PORT}
    volumes:
      - ${KAFKA_SSL_SECRETS_DIR}/control-center:/etc/kafka/secrets
      - ${KAFKA_SSL_SECRETS_DIR}/ca-public:/etc/kafka/truststore

  rest-proxy:
    image: confluentinc/cp-kafka-rest:${CONFLUENT_VERSION}
    depends_on:
      - broker
      - schema-registry
    ports:
      - ${REST_PROXY_PORT}:${REST_PROXY_PORT}
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:${BROKER_PORT_INTER_HOST}'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:${REST_PROXY_PORT}"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:${SCHEMA_REGISTRY_PORT}'

      KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SSL
      KAFKA_REST_CLIENT_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/${REST_PROXY_KEYSTORE}
      KAFKA_REST_CLIENT_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_REST_CLIENT_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/truststore/${TRUSTSTORE}
      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
    volumes:
      - ${KAFKA_SSL_SECRETS_DIR}/rest-proxy:/etc/kafka/secrets
      - ${KAFKA_SSL_SECRETS_DIR}/ca-public:/etc/kafka/truststore

  kafka-security-manager:
    image: conduktor/kafka-security-manager:latest
    hostname: kafka-security-manager
    container_name: kafka-security-manager
    depends_on:
      - broker
    environment:
      AUTHORIZER_ZOOKEEPER_CONNECT: zookeeper:${ZK_PORT}
      KSM_READONLY: "false"
      SOURCE_CLASS: "io.conduktor.ksm.source.FileSourceAcl"
      SOURCE_FILE_NAME: "example/acls.csv"
      ACL_PARSER_CSV_DELIMITER: '|'

      ADMIN_CLIENT_BOOTSTRAP_SERVERS: broker:${BROKER_PORT_INTER_HOST}
      ADMIN_CLIENT_ID: ksm-client
      ADMIN_CLIENT_SECURITY_PROTOCOL: SSL
      ADMIN_CLIENT_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/${ADMIN_CLIENT_KEYSTORE}
      ADMIN_CLIENT_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      ADMIN_CLIENT_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      ADMIN_CLIENT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/truststore/${TRUSTSTORE}
      ADMIN_CLIENT_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
    volumes:
      - ${KAFKA_ACL_DIR}:/opt/docker/example:ro
      - ${KAFKA_SSL_SECRETS_DIR}/admin-client:/etc/kafka/secrets
      - ${KAFKA_SSL_SECRETS_DIR}/ca-public:/etc/kafka/truststore

